name: Rust Build and Test

on:
  push:
    branches: [ main ]
    paths:
      - .github/workflows/build.yml
      - src/**
      - test/**
      - Cargo.lock
      - Cargo.toml
  pull_request:
    branches: [ main ]
    paths:
      - .github/workflows/build.yml
      - src/**
      - test/**
      - Cargo.lock
      - Cargo.toml
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: { }

jobs:
  build-versions:
    strategy:
      fail-fast: false
      matrix:
        rust-version: [ stable, beta, nightly, 1.65 ] # Stable, Beta, Nightly, MSRV
        info:
          - os: macos-latest
            target1: aarch64-apple-darwin
            target2: x86_64-apple-darwin
          - os: ubuntu-latest
            target1: x86_64-unknown-linux-gnu
            target2: i686-unknown-linux-gnu
          - os: windows-latest
            target1: x86_64-pc-windows-msvc
            target2: i686-pc-windows-msvc
    runs-on: ${{ matrix.info.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@master
        id: toolchain
        with:
          toolchain: ${{ matrix.rust-version }}
          targets: ${{ matrix.info.target1 }},${{ matrix.info.target2 }}
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.info.target1 }}+${{ matrix.info.target2 }}
      - name: Build (1)
        run: cargo +${{steps.toolchain.outputs.name}} build --verbose --workspace --target ${{ matrix.info.target1 }}
      - name: Build release (1)
        run: cargo +${{steps.toolchain.outputs.name}} build --verbose --workspace --release --target ${{ matrix.info.target1 }}
      - name: Build (2)
        run: cargo +${{steps.toolchain.outputs.name}} build --verbose --workspace --target ${{ matrix.info.target2 }}
      - name: Build release (2)
        run: cargo +${{steps.toolchain.outputs.name}} build --verbose --workspace --release --target ${{ matrix.info.target2 }}

  build-ink-cross:
    strategy:
      matrix:
        rust-version: [ stable ]
        info:
          - target: aarch64-unknown-linux-gnu
          - target: aarch64-unknown-linux-musl
          - target: armv7-unknown-linux-gnueabihf
          - target: armv7-unknown-linux-musleabihf
          - target: powerpc64le-unknown-linux-gnu
          - target: powerpc64-unknown-linux-gnu
          - target: riscv64gc-unknown-linux-gnu
          - target: s390x-unknown-linux-gnu
          - target: x86_64-unknown-linux-gnu
          - target: x86_64-unknown-linux-musl
          - target: x86_64-unknown-freebsd
          - target: x86_64-unknown-netbsd
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: Swatinem/rust-cache@v2
        with:
          key: ink-build-${{ matrix.info.target }}
      - name: Permission fix cargo registry
        run: mkdir -p "$HOME/.cargo/registry" && chown "$(id -u)":"$(id -g)" -R "$HOME/.cargo/registry"
      - name: Build with ink cross
        run: |
          docker run --rm \
          --userns host --user "$(id -u)":"$(id -g)" \
          -v "$HOME/.cargo/registry:/usr/local/cargo/registry" \
          -v ./:/project \
          ghcr.io/cargo-prebuilt/ink-cross:${{ matrix.rust-version }}-${{ matrix.info.target }} \
          build --verbose --workspace --target ${{ matrix.info.target }}

  test-all:
    strategy:
      fail-fast: false
      matrix:
        rust-version: [ stable ]
        info:
          # - os: macos-latest TODO: How to add user for dante.
          - os: ubuntu-latest
          # - os: windows-latest TODO: Find some kind of proxy server for windows.
    runs-on: ${{ matrix.info.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@master
        id: toolchain
        with:
          toolchain: ${{ matrix.rust-version }}
      - uses: Swatinem/rust-cache@v2
        with:
          key: test-all
      - name: Test Setup
        run: ./test/github/${{ matrix.info.os }}-setup.sh
      - name: Test
        run: RUST_BACKTRACE=1 cargo +${{steps.toolchain.outputs.name}} test --verbose --workspace
      - name: Test release
        run: RUST_BACKTRACE=1 cargo +${{steps.toolchain.outputs.name}} test --verbose --workspace --release
